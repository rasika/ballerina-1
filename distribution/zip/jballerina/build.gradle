/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    id 'base'
}

apply from: "$rootDir/gradle/repositories.gradle"

configurations {
    dist {
      transitive false
    }
    distBal {
        transitive false
    }
    jar
    bir
    birJar
    balo
    bin
    balSource
    staticArtifacts
    staticFiles
    source
    zip
    resourceFiles
    balx
}

dependencies {
    dist 'com.squareup.okhttp3:okhttp:3.9.1'
    dist 'com.squareup.okio:okio:1.13.0'
    dist 'com.uber.jaeger:jaeger-core:0.24.0'
    dist 'com.uber.jaeger:jaeger-thrift:0.24.0'
    dist 'com.zaxxer:HikariCP:3.3.1'
    dist 'io.dropwizard.metrics:metrics-core:3.1.0'
    dist 'javax.transaction:javax.transaction-api:1.2'
    dist 'org.apache.thrift:libthrift:0.10.0'
    dist 'org.hdrhistogram:HdrHistogram:2.1.10'
    dist 'org.jvnet.mimepull:mimepull:1.9.7'
    dist 'org.quartz-scheduler:quartz-jobs:2.3.0'
    dist 'org.quartz-scheduler:quartz:2.3.0'
    dist 'org.wso2.carbon:org.wso2.carbon.core:5.1.0'
    dist 'org.wso2.securevault:org.wso2.securevault:1.0.0-wso2v2'
    dist 'org.wso2.transport.file:org.wso2.transport.local-file-system:6.0.55'
    dist 'org.wso2.transport.http:org.wso2.transport.http.netty:6.2.13'
    dist 'org.bouncycastle:bcprov-jdk15on:1.61'
    dist 'org.bouncycastle:bcpkix-jdk15on:1.61'

    dist 'info.picocli:picocli:4.0.1'
    dist 'org.apache.kafka:kafka-clients:2.0.0'
    dist 'org.apache.kafka:kafka_2.11:2.0.0'
    dist 'io.ballerina.messaging:broker-auth:0.970.0'
    dist 'io.ballerina.messaging:broker-common:0.970.0'
    dist 'io.ballerina.messaging:broker-coordination:0.970.0'
    dist 'io.ballerina.messaging:broker-core:0.970.5'
    dist 'io.ballerina.messaging:broker-rest-runner:0.970.0'
    dist 'org.apache.geronimo.specs:geronimo-activation_1.1_spec:1.1'
    dist 'org.apache.geronimo.specs:geronimo-stax-api_1.0_spec:1.0.1'
    dist 'com.google.code.gson:gson:2.7'
    dist 'com.google.guava:guava:19.0'
    dist 'com.github.jknack:handlebars:4.0.6'
    dist 'jaxen:jaxen:1.1.6'
    dist 'io.netty:netty-buffer:4.1.39.Final'
    dist 'io.netty:netty-codec-http2:4.1.39.Final'
    dist 'io.netty:netty-codec-http:4.1.39.Final'
    dist 'io.netty:netty-codec:4.1.39.Final'
    dist 'io.netty:netty-common:4.1.39.Final'
    dist 'io.netty:netty-handler-proxy:4.1.39.Final'
    dist 'io.netty:netty-handler:4.1.39.Final'
    dist 'io.netty:netty-resolver:4.1.39.Final'
    dist 'io.netty:netty-tcnative-boringssl-static:2.0.25.Final'
    dist 'io.netty:netty-transport:4.1.39.Final'
    dist 'commons-pool.wso2:commons-pool:1.5.6.wso2v1'
    dist 'org.wso2.carbon.messaging:org.wso2.carbon.messaging:2.3.7'
    dist 'org.wso2.carbon.metrics:org.wso2.carbon.metrics.core:2.3.7'
    dist 'com.google.protobuf:protobuf-java:3.9.1'
    dist 'org.wso2.orbit.org.yaml:snakeyaml:1.16.0.wso2v1'
    dist 'org.wso2.staxon:staxon-core:1.2.0.wso2v2'
    dist 'com.rabbitmq:amqp-client:5.6.0'
    dist 'com.jcraft:jzlib:1.1.3'
    dist 'io.nats:java-nats-streaming:2.2.1'
    dist 'io.nats:jnats:2.6.0'
    dist 'commons-beanutils:commons-beanutils:1.9.3'
    dist 'org.jboss.logging:jboss-logging:3.3.1.Final'
    dist 'commons-collections:commons-collections:3.2.2'
    dist 'org.apache.geronimo.specs:geronimo-json_1.0_spec:1.0-alpha-1'
    dist 'io.netty:netty-transport-native-epoll:4.1.39.Final'
    dist 'io.netty:netty-transport-native-kqueue:4.1.39.Final'
//    dist 'org.codehaus.woodstox:woodstox-core-asl:4.2.0'
//    dist 'org.codehaus.woodstox:stax2-api:3.1.1'

    distBal project(path: ':ballerina-auth', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-cache', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-config-api', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-crypto', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-file', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-filepath', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-grpc', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-jdbc', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-http', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-encoding', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-internal', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-io', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-log-api', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-math', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-mime', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-observability', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-reflect', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-runtime-api', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-socket', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-streams', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-openapi', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-system', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-task', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-time', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-transactions', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-java', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-websub', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-xslt', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-kafka', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-rabbitmq', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-nats', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-utils', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-jwt', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-ldap', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-oauth2', configuration: 'baloImplementation')

    // Lang libs
    distBal project(path: ':ballerina-lang:internal', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:annotations', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:array', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:decimal', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:error', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:floatingpoint', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:future', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:integer', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:map', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:object', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:stream', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:string', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:table', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:typedesc', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:value', configuration: 'baloImplementation')
    distBal project(path: ':ballerina-lang:xml', configuration: 'baloImplementation')

    balSource project(path: ':ballerina-auth', configuration: 'balSource')
    balSource project(path: ':ballerina-cache', configuration: 'balSource')
    balSource project(path: ':ballerina-config-api', configuration: 'balSource')
    balSource project(path: ':ballerina-crypto', configuration: 'balSource')
    balSource project(path: ':ballerina-file', configuration: 'balSource')
    balSource project(path: ':ballerina-filepath', configuration: 'balSource')
    balSource project(path: ':ballerina-grpc', configuration: 'balSource')
    balSource project(path: ':ballerina-jdbc', configuration: 'balSource')
    balSource project(path: ':ballerina-http', configuration: 'balSource')
    balSource project(path: ':ballerina-encoding', configuration: 'balSource')
    balSource project(path: ':ballerina-internal', configuration: 'balSource')
    balSource project(path: ':ballerina-io', configuration: 'balSource')
    balSource project(path: ':ballerina-log-api', configuration: 'balSource')
    balSource project(path: ':ballerina-math', configuration: 'balSource')
    balSource project(path: ':ballerina-mime', configuration: 'balSource')
    balSource project(path: ':ballerina-observability', configuration: 'balSource')
    balSource project(path: ':ballerina-reflect', configuration: 'balSource')
    balSource project(path: ':ballerina-runtime-api', configuration: 'balSource')
    balSource project(path: ':ballerina-socket', configuration: 'balSource')
    balSource project(path: ':ballerina-streams', configuration: 'balSource')
    balSource project(path: ':ballerina-openapi', configuration: 'balSource')
    balSource project(path: ':ballerina-system', configuration: 'balSource')
    balSource project(path: ':ballerina-task', configuration: 'balSource')
    balSource project(path: ':ballerina-time', configuration: 'balSource')
    balSource project(path: ':ballerina-transactions', configuration: 'balSource')
    balSource project(path: ':ballerina-java', configuration: 'balSource')
    balSource project(path: ':ballerina-websub', configuration: 'balSource')
    balSource project(path: ':ballerina-xslt', configuration: 'balSource')
    balSource project(path: ':ballerina-kafka', configuration: 'balSource')
    balSource project(path: ':ballerina-rabbitmq', configuration: 'balSource')
    balSource project(path: ':ballerina-nats', configuration: 'balSource')
    balSource project(path: ':ballerina-utils', configuration: 'balSource')
    balSource project(path: ':ballerina-jwt', configuration: 'balSource')
    balSource project(path: ':ballerina-ldap', configuration: 'balSource')
    balSource project(path: ':ballerina-oauth2', configuration: 'balSource')

    // Lang Libs
    balSource project(path: ':ballerina-lang:internal', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:annotations', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:array', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:decimal', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:error', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:floatingpoint', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:future', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:integer', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:map', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:object', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:stream', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:string', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:table', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:typedesc', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:value', configuration: 'balSource')
    balSource project(path: ':ballerina-lang:xml', configuration: 'balSource')

    dist project(':ballerina-auth')
    dist project(':ballerina-cli-utils')
    dist project(':ballerina-config-api')
    dist project(':ballerina-core')
    dist project(':ballerina-crypto')
    dist project(':ballerina-file')
    dist project(':ballerina-filepath')
    dist project(':ballerina-grpc')
    dist project(':ballerina-jdbc')
    dist project(':ballerina-http')
    dist project(':ballerina-openapi')
    dist project(':ballerina-encoding')
    dist project(':ballerina-internal')
    dist project(':ballerina-io')
    dist project(':ballerina-lang')
    dist project(':ballerina-log-api')
    dist project(':ballerina-logging')
    dist project(':ballerina-math')
    dist project(':ballerina-mime')
    dist project(':ballerina-observability')
    dist project(':ballerina-reflect')
    dist project(':ballerina-runtime-api')
    dist project(':ballerina-rt')
    dist project(':ballerina-socket')
    dist project(':ballerina-streams')
    dist project(':ballerina-system')
    dist project(':ballerina-task')
    dist project(':ballerina-time')
    dist project(':ballerina-tool')
    dist project(':ballerina-transactions')
    dist project(':ballerina-java')
    dist project(':ballerina-websub')
    dist project(':ballerina-xslt')
    dist project(':ballerina-utils')
    dist project(':metrics-extensions:ballerina-metrics-extension')
    dist project(':metrics-extensions:ballerina-prometheus-extension')
    dist project(':tracing-extensions:ballerina-jaeger-extension')
    dist project(':ballerina-kafka')
    dist project(':ballerina-rabbitmq')
    dist project(':ballerina-nats')
    dist project(':ballerina-jwt')
    dist project(':ballerina-ldap')
    dist project(':ballerina-oauth2')

    // Lang libs
    dist project(':ballerina-lang:internal')
    dist project(':ballerina-lang:annotations')
    dist project(':ballerina-lang:array')
    dist project(':ballerina-lang:decimal')
    dist project(':ballerina-lang:error')
    dist project(':ballerina-lang:floatingpoint')
    dist project(':ballerina-lang:future')
    dist project(':ballerina-lang:integer')
    dist project(':ballerina-lang:map')
    dist project(':ballerina-lang:object')
    dist project(':ballerina-lang:stream')
    dist project(':ballerina-lang:string')
    dist project(':ballerina-lang:table')
    dist project(':ballerina-lang:typedesc')
    dist project(':ballerina-lang:value')
    dist project(':ballerina-lang:xml')

    birJar project(path: ':metrics-extensions:ballerina-prometheus-extension', configuration: 'prometheusJar')

    staticArtifacts files('COPYRIGHT', 'LICENSE', 'README.md')
}

task configured {
    configurations.distBal.allDependencies.withType(ProjectDependency) {
        def path = it.getDependencyProject().path
        dependencies.add("bir", dependencies.project(path: path, configuration: 'bir'))
        dependencies.add("birJar", dependencies.project(path: path, configuration: 'birJar'))
    }
}

def basePath = '/' + project.name + '-' + project.version

CopySpec copyJarSpec = copySpec {
    from configurations.dist
    into(basePath + '/bre/lib')
}

CopySpec copyBaloSpec = copySpec {
    from configurations.distBal
    into(basePath + '/lib')
}

CopySpec copyBalxSpec = copySpec {
    from configurations.balx
    into(basePath + '/lib/balx')
}

CopySpec copyBinSpec = copySpec {
    from ('bin')
    filter { line -> line.replace('${project.version}', "${project.version}") }
    into(basePath + '/bin')
}

CopySpec copyStaticSpec = copySpec {
    from configurations.staticArtifacts.files
    into(basePath + '/')
}

CopySpec copyResourceSpec = copySpec {
    from files('resources')
    into(basePath + '/bre')
}

//CopySpec copySrcBaloSpec = copySpec {
//    from configurations.balSource.files
//    into("$basePath/src")
//}


task createZip(type: Zip) {
    with copyJarSpec
    with copyBaloSpec
    with copyBinSpec
    with copyStaticSpec
    with copyResourceSpec
//    with copySrcBaloSpec
    with copyBalxSpec
}

artifacts {
    jar configurations.dist.files
    balo configurations.distBal.files
    source configurations.balSource.files
    bin file('bin')
    staticFiles configurations.staticArtifacts.files
    resourceFiles file('resources')
    zip file: file("$buildDir/distributions/${basePath}.zip"), builtBy: createZip
}

build {
    dependsOn createZip
}

// This section makes sure that checkstyle/spotbug runs when dist is build.
project.afterEvaluate {
    configurations.dist.dependencies
        .findAll { it instanceof ProjectDependency }
        .each {
            it.dependencyProject.afterEvaluate {
                def dependencyCheck = it.tasks.find { it.name == 'check' }
                check.dependsOn dependencyCheck
            }
        }
}
